/*
 * Journey Analytics API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alterian.ja.model;

import com.alterian.ja.model.ColumnMatchList;
import com.alterian.ja.model.EventStreamCountType;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for QueryEventStreamCountRequest
 */
public class QueryEventStreamCountRequestTest {
    private final QueryEventStreamCountRequest model = new QueryEventStreamCountRequest();

    /**
     * Model tests for QueryEventStreamCountRequest
     */
    @Test
    public void testQueryEventStreamCountRequest() {
        // TODO: test QueryEventStreamCountRequest
    }

    /**
     * Test the property 'countType'
     */
    @Test
    public void countTypeTest() {
        // TODO: test countType
    }

    /**
     * Test the property 'dataSourceId'
     */
    @Test
    public void dataSourceIdTest() {
        // TODO: test dataSourceId
    }

    /**
     * Test the property 'eventDateTimeLower'
     */
    @Test
    public void eventDateTimeLowerTest() {
        // TODO: test eventDateTimeLower
    }

    /**
     * Test the property 'eventDateTimeUpper'
     */
    @Test
    public void eventDateTimeUpperTest() {
        // TODO: test eventDateTimeUpper
    }

    /**
     * Test the property 'eventStreamId'
     */
    @Test
    public void eventStreamIdTest() {
        // TODO: test eventStreamId
    }

    /**
     * Test the property 'filters'
     */
    @Test
    public void filtersTest() {
        // TODO: test filters
    }

    /**
     * Test the property 'isDataRefreshRequired'
     */
    @Test
    public void isDataRefreshRequiredTest() {
        // TODO: test isDataRefreshRequired
    }

    /**
     * Test the property 'patternId'
     */
    @Test
    public void patternIdTest() {
        // TODO: test patternId
    }

    /**
     * Test the property 'tableNameEx'
     */
    @Test
    public void tableNameExTest() {
        // TODO: test tableNameEx
    }

}

/*
 * Journey Analytics API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alterian.ja.model;

import com.alterian.ja.model.DMClientSettings;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DMClient
 */
public class DMClientTest {
    private final DMClient model = new DMClient();

    /**
     * Model tests for DMClient
     */
    @Test
    public void testDMClient() {
        // TODO: test DMClient
    }

    /**
     * Test the property 'ID'
     */
    @Test
    public void IDTest() {
        // TODO: test ID
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'virtualMTA'
     */
    @Test
    public void virtualMTATest() {
        // TODO: test virtualMTA
    }

    /**
     * Test the property 'connectionString'
     */
    @Test
    public void connectionStringTest() {
        // TODO: test connectionString
    }

    /**
     * Test the property 'hashTable'
     */
    @Test
    public void hashTableTest() {
        // TODO: test hashTable
    }

    /**
     * Test the property 'contentPath'
     */
    @Test
    public void contentPathTest() {
        // TODO: test contentPath
    }

    /**
     * Test the property 'contentURL'
     */
    @Test
    public void contentURLTest() {
        // TODO: test contentURL
    }

    /**
     * Test the property 'seats'
     */
    @Test
    public void seatsTest() {
        // TODO: test seats
    }

    /**
     * Test the property 'setID'
     */
    @Test
    public void setIDTest() {
        // TODO: test setID
    }

    /**
     * Test the property 'icon'
     */
    @Test
    public void iconTest() {
        // TODO: test icon
    }

    /**
     * Test the property 'contentServerID'
     */
    @Test
    public void contentServerIDTest() {
        // TODO: test contentServerID
    }

    /**
     * Test the property 'directory'
     */
    @Test
    public void directoryTest() {
        // TODO: test directory
    }

    /**
     * Test the property 'dbServerID'
     */
    @Test
    public void dbServerIDTest() {
        // TODO: test dbServerID
    }

    /**
     * Test the property 'dbName'
     */
    @Test
    public void dbNameTest() {
        // TODO: test dbName
    }

    /**
     * Test the property 'mtAServerID'
     */
    @Test
    public void mtAServerIDTest() {
        // TODO: test mtAServerID
    }

    /**
     * Test the property 'defaultDC'
     */
    @Test
    public void defaultDCTest() {
        // TODO: test defaultDC
    }

    /**
     * Test the property 'deliveryContexts'
     */
    @Test
    public void deliveryContextsTest() {
        // TODO: test deliveryContexts
    }

    /**
     * Test the property 'settings'
     */
    @Test
    public void settingsTest() {
        // TODO: test settings
    }

    /**
     * Test the property 'imageBasePath'
     */
    @Test
    public void imageBasePathTest() {
        // TODO: test imageBasePath
    }

}

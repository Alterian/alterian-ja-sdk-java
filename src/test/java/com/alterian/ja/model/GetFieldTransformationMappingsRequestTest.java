/*
 * Journey Analytics API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alterian.ja.model;

import com.alterian.ja.model.APICursor;
import com.alterian.ja.model.FieldTransformationSampleSettings;
import com.alterian.ja.model.MatchOptions;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GetFieldTransformationMappingsRequest
 */
public class GetFieldTransformationMappingsRequestTest {
    private final GetFieldTransformationMappingsRequest model = new GetFieldTransformationMappingsRequest();

    /**
     * Model tests for GetFieldTransformationMappingsRequest
     */
    @Test
    public void testGetFieldTransformationMappingsRequest() {
        // TODO: test GetFieldTransformationMappingsRequest
    }

    /**
     * Test the property 'columnNameEx'
     */
    @Test
    public void columnNameExTest() {
        // TODO: test columnNameEx
    }

    /**
     * Test the property 'cursor'
     */
    @Test
    public void cursorTest() {
        // TODO: test cursor
    }

    /**
     * Test the property 'dataSourceId'
     */
    @Test
    public void dataSourceIdTest() {
        // TODO: test dataSourceId
    }

    /**
     * Test the property 'isDataRefreshRequired'
     */
    @Test
    public void isDataRefreshRequiredTest() {
        // TODO: test isDataRefreshRequired
    }

    /**
     * Test the property 'jsONCompareTransforms'
     */
    @Test
    public void jsONCompareTransformsTest() {
        // TODO: test jsONCompareTransforms
    }

    /**
     * Test the property 'jsONTransforms'
     */
    @Test
    public void jsONTransformsTest() {
        // TODO: test jsONTransforms
    }

    /**
     * Test the property 'postFilter'
     */
    @Test
    public void postFilterTest() {
        // TODO: test postFilter
    }

    /**
     * Test the property 'sampleSettings'
     */
    @Test
    public void sampleSettingsTest() {
        // TODO: test sampleSettings
    }

    /**
     * Test the property 'sourceFilter'
     */
    @Test
    public void sourceFilterTest() {
        // TODO: test sourceFilter
    }

    /**
     * Test the property 'sourcePostMatch'
     */
    @Test
    public void sourcePostMatchTest() {
        // TODO: test sourcePostMatch
    }

}

/*
 * Journey Analytics API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alterian.ja.model;

import com.alterian.ja.model.DMUser;
import com.alterian.ja.model.EMDocumentActivityType;
import com.alterian.ja.model.EMDocumentType;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for EMDocument
 */
public class EMDocumentTest {
    private final EMDocument model = new EMDocument();

    /**
     * Model tests for EMDocument
     */
    @Test
    public void testEMDocument() {
        // TODO: test EMDocument
    }

    /**
     * Test the property 'createdBy'
     */
    @Test
    public void createdByTest() {
        // TODO: test createdBy
    }

    /**
     * Test the property 'createdDate'
     */
    @Test
    public void createdDateTest() {
        // TODO: test createdDate
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'folderID'
     */
    @Test
    public void folderIDTest() {
        // TODO: test folderID
    }

    /**
     * Test the property 'folderPath'
     */
    @Test
    public void folderPathTest() {
        // TODO: test folderPath
    }

    /**
     * Test the property 'hasThumbnail'
     */
    @Test
    public void hasThumbnailTest() {
        // TODO: test hasThumbnail
    }

    /**
     * Test the property 'ID'
     */
    @Test
    public void IDTest() {
        // TODO: test ID
    }

    /**
     * Test the property 'lastActivityBy'
     */
    @Test
    public void lastActivityByTest() {
        // TODO: test lastActivityBy
    }

    /**
     * Test the property 'lastActivityDate'
     */
    @Test
    public void lastActivityDateTest() {
        // TODO: test lastActivityDate
    }

    /**
     * Test the property 'lastActivityType'
     */
    @Test
    public void lastActivityTypeTest() {
        // TODO: test lastActivityType
    }

    /**
     * Test the property 'lastModifiedBy'
     */
    @Test
    public void lastModifiedByTest() {
        // TODO: test lastModifiedBy
    }

    /**
     * Test the property 'lastModifiedDate'
     */
    @Test
    public void lastModifiedDateTest() {
        // TODO: test lastModifiedDate
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'sourceID'
     */
    @Test
    public void sourceIDTest() {
        // TODO: test sourceID
    }

    /**
     * Test the property 'thumbnailPath'
     */
    @Test
    public void thumbnailPathTest() {
        // TODO: test thumbnailPath
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

}

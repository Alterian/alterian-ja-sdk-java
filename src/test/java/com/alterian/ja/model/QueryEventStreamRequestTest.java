/*
 * Journey Analytics API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alterian.ja.model;

import com.alterian.ja.model.ColumnMatchList;
import com.alterian.ja.model.EventStreamAlignmentType;
import com.alterian.ja.model.EventStreamColumnTransform;
import com.alterian.ja.model.EventStreamPattern;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for QueryEventStreamRequest
 */
public class QueryEventStreamRequestTest {
    private final QueryEventStreamRequest model = new QueryEventStreamRequest();

    /**
     * Model tests for QueryEventStreamRequest
     */
    @Test
    public void testQueryEventStreamRequest() {
        // TODO: test QueryEventStreamRequest
    }

    /**
     * Test the property 'alignment'
     */
    @Test
    public void alignmentTest() {
        // TODO: test alignment
    }

    /**
     * Test the property 'alignmentEventName'
     */
    @Test
    public void alignmentEventNameTest() {
        // TODO: test alignmentEventName
    }

    /**
     * Test the property 'alignmentSecondaryEventName'
     */
    @Test
    public void alignmentSecondaryEventNameTest() {
        // TODO: test alignmentSecondaryEventName
    }

    /**
     * Test the property 'columnTransforms'
     */
    @Test
    public void columnTransformsTest() {
        // TODO: test columnTransforms
    }

    /**
     * Test the property 'conversationTimeoutInSeconds'
     */
    @Test
    public void conversationTimeoutInSecondsTest() {
        // TODO: test conversationTimeoutInSeconds
    }

    /**
     * Test the property 'dataSourceId'
     */
    @Test
    public void dataSourceIdTest() {
        // TODO: test dataSourceId
    }

    /**
     * Test the property 'eventDateTimeLower'
     */
    @Test
    public void eventDateTimeLowerTest() {
        // TODO: test eventDateTimeLower
    }

    /**
     * Test the property 'eventDateTimeUpper'
     */
    @Test
    public void eventDateTimeUpperTest() {
        // TODO: test eventDateTimeUpper
    }

    /**
     * Test the property 'eventStreamId'
     */
    @Test
    public void eventStreamIdTest() {
        // TODO: test eventStreamId
    }

    /**
     * Test the property 'eventTypes'
     */
    @Test
    public void eventTypesTest() {
        // TODO: test eventTypes
    }

    /**
     * Test the property 'filters'
     */
    @Test
    public void filtersTest() {
        // TODO: test filters
    }

    /**
     * Test the property 'initiatives'
     */
    @Test
    public void initiativesTest() {
        // TODO: test initiatives
    }

    /**
     * Test the property 'isDataRefreshRequired'
     */
    @Test
    public void isDataRefreshRequiredTest() {
        // TODO: test isDataRefreshRequired
    }

    /**
     * Test the property 'isDeduplicationRequired'
     */
    @Test
    public void isDeduplicationRequiredTest() {
        // TODO: test isDeduplicationRequired
    }

    /**
     * Test the property 'isTimeoutEventsRequired'
     */
    @Test
    public void isTimeoutEventsRequiredTest() {
        // TODO: test isTimeoutEventsRequired
    }

    /**
     * Test the property 'maxLength'
     */
    @Test
    public void maxLengthTest() {
        // TODO: test maxLength
    }

    /**
     * Test the property 'pattern'
     */
    @Test
    public void patternTest() {
        // TODO: test pattern
    }

    /**
     * Test the property 'primaryEventColumnName'
     */
    @Test
    public void primaryEventColumnNameTest() {
        // TODO: test primaryEventColumnName
    }

    /**
     * Test the property 'secondaryEventColumnName'
     */
    @Test
    public void secondaryEventColumnNameTest() {
        // TODO: test secondaryEventColumnName
    }

    /**
     * Test the property 'streamKey'
     */
    @Test
    public void streamKeyTest() {
        // TODO: test streamKey
    }

    /**
     * Test the property 'streamQuery'
     */
    @Test
    public void streamQueryTest() {
        // TODO: test streamQuery
    }

    /**
     * Test the property 'tableNameEx'
     */
    @Test
    public void tableNameExTest() {
        // TODO: test tableNameEx
    }

    /**
     * Test the property 'topN'
     */
    @Test
    public void topNTest() {
        // TODO: test topN
    }

}

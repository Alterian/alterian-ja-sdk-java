/*
 * Journey Analytics API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alterian.ja.api;

import com.alterian.ja.ApiException;
import com.alterian.ja.model.AUTHChangePasswordDefaultResponse;
import com.alterian.ja.model.CreateClientDefaultResponse;
import com.alterian.ja.model.CreateClientRequest;
import com.alterian.ja.model.DeleteClientRequest;
import com.alterian.ja.model.DisableClientRequest;
import com.alterian.ja.model.GetBrandsDefaultResponse;
import com.alterian.ja.model.GetClientSettingsDefaultResponse;
import com.alterian.ja.model.GetClientSettingsRequest;
import com.alterian.ja.model.GetClientsRequest;
import com.alterian.ja.model.GetCurrentClientDefaultResponse;
import com.alterian.ja.model.UpdateClientSettingsRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ClientApi
 */
@Disabled
public class ClientApiTest {

    private final ClientApi api = new ClientApi();

    /**
     * Create a new @see(ALClient), with it&#39;s own unique database and set of users.
     *
     * Create a new @see(ALClient), with it&#39;s own unique database and set of users.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createClientTest() throws ApiException {
        CreateClientRequest createClientRequest = null;
        CreateClientDefaultResponse response = api.createClient(createClientRequest);
        // TODO: test validations
    }

    /**
     * Create a new @see(ALClient), with it&#39;s own unique database and set of users.             Additionally creates an example user / group with relevant permissions to design campaign factory campaigns.
     *
     * Create a new @see(ALClient), with it&#39;s own unique database and set of users.             Additionally creates an example user / group with relevant permissions to design campaign factory campaigns.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createClientExTest() throws ApiException {
        CreateClientRequest createClientRequest = null;
        CreateClientDefaultResponse response = api.createClientEx(createClientRequest);
        // TODO: test validations
    }

    /**
     * Deletes a @see(ALClient).  Removes the client&#39;s database.  Note that the client must be disabled with @see(DisableClient) before calling this.
     *
     * Deletes a @see(ALClient).  Removes the client&#39;s database.  Note that the client must be disabled with @see(DisableClient) before calling this.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteClientTest() throws ApiException {
        DeleteClientRequest deleteClientRequest = null;
        AUTHChangePasswordDefaultResponse response = api.deleteClient(deleteClientRequest);
        // TODO: test validations
    }

    /**
     * Mark an individual @see(ALClient) as disabled. Disabled clients will not allow users to log on, documents will not be processed etc.
     *
     * Mark an individual @see(ALClient) as disabled. Disabled clients will not allow users to log on, documents will not be processed etc.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void disableClientTest() throws ApiException {
        DisableClientRequest disableClientRequest = null;
        AUTHChangePasswordDefaultResponse response = api.disableClient(disableClientRequest);
        // TODO: test validations
    }

    /**
     * Mark an individual @see(ALClient) as enabled. Enabled clients allow users to log on, documents will be processed etc.
     *
     * Mark an individual @see(ALClient) as enabled. Enabled clients allow users to log on, documents will be processed etc.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void enableClientTest() throws ApiException {
        DisableClientRequest disableClientRequest = null;
        AUTHChangePasswordDefaultResponse response = api.enableClient(disableClientRequest);
        // TODO: test validations
    }

    /**
     * Returns the settings for the specified Client
     *
     * Returns the settings for the specified Client
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getClientSettingsTest() throws ApiException {
        GetClientSettingsRequest getClientSettingsRequest = null;
        GetClientSettingsDefaultResponse response = api.getClientSettings(getClientSettingsRequest);
        // TODO: test validations
    }

    /**
     * Return a list of clients that match the supplied (optional) filters.
     *
     * Return a list of clients that match the supplied (optional) filters.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getClientsTest() throws ApiException {
        GetClientsRequest getClientsRequest = null;
        GetBrandsDefaultResponse response = api.getClients(getClientsRequest);
        // TODO: test validations
    }

    /**
     * Returns back the client for the current token
     *
     * Returns back the client for the current token
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCurrentClientTest() throws ApiException {
        GetCurrentClientDefaultResponse response = api.getCurrentClient();
        // TODO: test validations
    }

    /**
     * Updates the settings for the specified client. Warning: This API deletes any settings not included in the update request
     *
     * Updates the settings for the specified client. Warning: This API deletes any settings not included in the update request
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateClientSettingsTest() throws ApiException {
        UpdateClientSettingsRequest updateClientSettingsRequest = null;
        AUTHChangePasswordDefaultResponse response = api.updateClientSettings(updateClientSettingsRequest);
        // TODO: test validations
    }

}

/*
 * Journey Analytics API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alterian.ja.api;

import com.alterian.ja.ApiException;
import com.alterian.ja.model.AUTHChangePasswordDefaultResponse;
import com.alterian.ja.model.CreateClientDefaultResponse;
import com.alterian.ja.model.CreatePersonaRequest;
import com.alterian.ja.model.DeletePersonaRequest;
import com.alterian.ja.model.GetPersonaDefaultResponse;
import com.alterian.ja.model.GetPersonaRequest;
import com.alterian.ja.model.GetPersonasDefaultResponse;
import com.alterian.ja.model.GetPersonasRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PersonaApi
 */
@Disabled
public class PersonaApiTest {

    private final PersonaApi api = new PersonaApi();

    /**
     * Creates a @see(Persona)
     *
     * Creates a @see(Persona)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createPersonaTest() throws ApiException {
        CreatePersonaRequest createPersonaRequest = null;
        CreateClientDefaultResponse response = api.createPersona(createPersonaRequest);
        // TODO: test validations
    }

    /**
     * Deletes a persona from the system
     *
     * Deletes a persona from the system
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deletePersonaTest() throws ApiException {
        DeletePersonaRequest deletePersonaRequest = null;
        AUTHChangePasswordDefaultResponse response = api.deletePersona(deletePersonaRequest);
        // TODO: test validations
    }

    /**
     * Returns back a single @see(Persona)
     *
     * Returns back a single @see(Persona)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPersonaTest() throws ApiException {
        GetPersonaRequest getPersonaRequest = null;
        GetPersonaDefaultResponse response = api.getPersona(getPersonaRequest);
        // TODO: test validations
    }

    /**
     * Returns back a list of @see(Persona)
     *
     * Returns back a list of @see(Persona)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPersonasTest() throws ApiException {
        GetPersonasRequest getPersonasRequest = null;
        GetPersonasDefaultResponse response = api.getPersonas(getPersonasRequest);
        // TODO: test validations
    }

    /**
     * Updates an @see(Persona)
     *
     * Updates an @see(Persona)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePersonaTest() throws ApiException {
        CreatePersonaRequest createPersonaRequest = null;
        AUTHChangePasswordDefaultResponse response = api.updatePersona(createPersonaRequest);
        // TODO: test validations
    }

}

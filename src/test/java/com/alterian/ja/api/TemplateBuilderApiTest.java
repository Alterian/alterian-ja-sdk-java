/*
 * Journey Analytics API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alterian.ja.api;

import com.alterian.ja.ApiException;
import com.alterian.ja.model.AUTHChangePasswordDefaultResponse;
import com.alterian.ja.model.CreateWebSpoonDefaultResponse;
import com.alterian.ja.model.CreateWebSpoonRequest;
import com.alterian.ja.model.DeleteWebSpoonRequest;
import com.alterian.ja.model.GetDataSourceEngineUserNameDefaultResponse;
import com.alterian.ja.model.GetWebSpoonLoginUrlRequest;
import com.alterian.ja.model.ListWebSpoonDefaultResponse;
import com.alterian.ja.model.ListWebSpoonRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TemplateBuilderApi
 */
@Disabled
public class TemplateBuilderApiTest {

    private final TemplateBuilderApi api = new TemplateBuilderApi();

    /**
     * Creates an instance of Template Builder which will be unique to this system, the brand and user which calls the method.
     *
     * Creates an instance of Template Builder which will be unique to this system, the brand and user which calls the method.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createWebSpoonTest() throws ApiException {
        CreateWebSpoonRequest createWebSpoonRequest = null;
        CreateWebSpoonDefaultResponse response = api.createWebSpoon(createWebSpoonRequest);
        // TODO: test validations
    }

    /**
     * Removes a Template Builder instance
     *
     * Removes a Template Builder instance
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteWebSpoonTest() throws ApiException {
        DeleteWebSpoonRequest deleteWebSpoonRequest = null;
        AUTHChangePasswordDefaultResponse response = api.deleteWebSpoon(deleteWebSpoonRequest);
        // TODO: test validations
    }

    /**
     * Check to make sure Template Builder is available
     *
     * Check to make sure Template Builder is available
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWebSpoonAvailableTest() throws ApiException {
        AUTHChangePasswordDefaultResponse response = api.getWebSpoonAvailable();
        // TODO: test validations
    }

    /**
     * Get a URL valid for redirecting to the Template Builder instance; note, this will return nothing if the operational status is not \&quot;UP\&quot;
     *
     * Get a URL valid for redirecting to the Template Builder instance; note, this will return nothing if the operational status is not \&quot;UP\&quot;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWebSpoonLoginUrlTest() throws ApiException {
        GetWebSpoonLoginUrlRequest getWebSpoonLoginUrlRequest = null;
        GetDataSourceEngineUserNameDefaultResponse response = api.getWebSpoonLoginUrl(getWebSpoonLoginUrlRequest);
        // TODO: test validations
    }

    /**
     * Returns back the Template Builder instances which have been created for this system, brand and user (unique to that combination)
     *
     * Returns back the Template Builder instances which have been created for this system, brand and user (unique to that combination)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listWebSpoonTest() throws ApiException {
        ListWebSpoonRequest listWebSpoonRequest = null;
        ListWebSpoonDefaultResponse response = api.listWebSpoon(listWebSpoonRequest);
        // TODO: test validations
    }

}

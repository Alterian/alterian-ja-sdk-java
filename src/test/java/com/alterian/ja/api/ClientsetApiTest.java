/*
 * Journey Analytics API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alterian.ja.api;

import com.alterian.ja.ApiException;
import com.alterian.ja.model.AUTHChangePasswordDefaultResponse;
import com.alterian.ja.model.AddClientToClientSetRequest;
import com.alterian.ja.model.CreateClientDefaultResponse;
import com.alterian.ja.model.CreateClientSetRequest;
import com.alterian.ja.model.DeleteClientSetRequest;
import com.alterian.ja.model.GetClientSetsDefaultResponse;
import com.alterian.ja.model.GetClientSetsRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ClientsetApi
 */
@Disabled
public class ClientsetApiTest {

    private final ClientsetApi api = new ClientsetApi();

    /**
     * Move a @see(ALClient) from it&#39;s current @see(ALClientSet) to another clientset
     *
     * Move a @see(ALClient) from it&#39;s current @see(ALClientSet) to another clientset
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addClientToClientSetTest() throws ApiException {
        AddClientToClientSetRequest addClientToClientSetRequest = null;
        AUTHChangePasswordDefaultResponse response = api.addClientToClientSet(addClientToClientSetRequest);
        // TODO: test validations
    }

    /**
     * Create a new @see(ALClientSet) within the system.
     *
     * Create a new @see(ALClientSet) within the system.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createClientSetTest() throws ApiException {
        CreateClientSetRequest createClientSetRequest = null;
        CreateClientDefaultResponse response = api.createClientSet(createClientSetRequest);
        // TODO: test validations
    }

    /**
     * Remove the given @see(ALClientSet) from the system. This method will fail if any @see(ALClient) exists within the clientset - i.e. the clientset must be empty before deletion
     *
     * Remove the given @see(ALClientSet) from the system. This method will fail if any @see(ALClient) exists within the clientset - i.e. the clientset must be empty before deletion
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteClientSetTest() throws ApiException {
        DeleteClientSetRequest deleteClientSetRequest = null;
        AUTHChangePasswordDefaultResponse response = api.deleteClientSet(deleteClientSetRequest);
        // TODO: test validations
    }

    /**
     * List all the clientsets within the system
     *
     * List all the clientsets within the system
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getClientSetsTest() throws ApiException {
        GetClientSetsRequest getClientSetsRequest = null;
        GetClientSetsDefaultResponse response = api.getClientSets(getClientSetsRequest);
        // TODO: test validations
    }

}

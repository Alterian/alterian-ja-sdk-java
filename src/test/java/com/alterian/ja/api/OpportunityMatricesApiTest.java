/*
 * Journey Analytics API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alterian.ja.api;

import com.alterian.ja.ApiException;
import com.alterian.ja.model.AUTHChangePasswordDefaultResponse;
import com.alterian.ja.model.CreateBusinessGoalRequest;
import com.alterian.ja.model.CreateClientDefaultResponse;
import com.alterian.ja.model.CreateInitiativeRequest;
import com.alterian.ja.model.CreateOpportunityRequest;
import com.alterian.ja.model.DeleteBusinessGoalRequest;
import com.alterian.ja.model.DeleteInitiativeRequest;
import com.alterian.ja.model.DeleteOpportunityRequest;
import com.alterian.ja.model.GetBusinessGoalsDefaultResponse;
import com.alterian.ja.model.GetEventStreamInitiativesDefaultResponse;
import com.alterian.ja.model.GetEventStreamInitiativesRequest;
import com.alterian.ja.model.GetOpportunitiesDefaultResponse;
import com.alterian.ja.model.GetOpportunityMatrixDefaultResponse;
import com.alterian.ja.model.UpdateOpportunityMatrixRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OpportunityMatricesApi
 */
@Disabled
public class OpportunityMatricesApiTest {

    private final OpportunityMatricesApi api = new OpportunityMatricesApi();

    /**
     * Create a Business Goal
     *
     * Create a Business Goal
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createBusinessGoalTest() throws ApiException {
        CreateBusinessGoalRequest createBusinessGoalRequest = null;
        CreateClientDefaultResponse response = api.createBusinessGoal(createBusinessGoalRequest);
        // TODO: test validations
    }

    /**
     * Create a Business Initiative
     *
     * Create a Business Initiative
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createInitiativeTest() throws ApiException {
        CreateInitiativeRequest createInitiativeRequest = null;
        CreateClientDefaultResponse response = api.createInitiative(createInitiativeRequest);
        // TODO: test validations
    }

    /**
     * Create an opportunity
     *
     * Create an opportunity
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createOpportunityTest() throws ApiException {
        CreateOpportunityRequest createOpportunityRequest = null;
        CreateClientDefaultResponse response = api.createOpportunity(createOpportunityRequest);
        // TODO: test validations
    }

    /**
     * Delete a Business Goal
     *
     * Delete a Business Goal
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteBusinessGoalTest() throws ApiException {
        DeleteBusinessGoalRequest deleteBusinessGoalRequest = null;
        AUTHChangePasswordDefaultResponse response = api.deleteBusinessGoal(deleteBusinessGoalRequest);
        // TODO: test validations
    }

    /**
     * Delete a Business Initiative
     *
     * Delete a Business Initiative
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteInitiativeTest() throws ApiException {
        DeleteInitiativeRequest deleteInitiativeRequest = null;
        AUTHChangePasswordDefaultResponse response = api.deleteInitiative(deleteInitiativeRequest);
        // TODO: test validations
    }

    /**
     * Delete an opportunity
     *
     * Delete an opportunity
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteOpportunityTest() throws ApiException {
        DeleteOpportunityRequest deleteOpportunityRequest = null;
        AUTHChangePasswordDefaultResponse response = api.deleteOpportunity(deleteOpportunityRequest);
        // TODO: test validations
    }

    /**
     * Get the list of Business Goal
     *
     * Get the list of Business Goal
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBusinessGoalsTest() throws ApiException {
        GetBusinessGoalsDefaultResponse response = api.getBusinessGoals();
        // TODO: test validations
    }

    /**
     * Get initiatives for an event stream
     *
     * Get initiatives for an event stream
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEventStreamInitiativesTest() throws ApiException {
        GetEventStreamInitiativesRequest getEventStreamInitiativesRequest = null;
        GetEventStreamInitiativesDefaultResponse response = api.getEventStreamInitiatives(getEventStreamInitiativesRequest);
        // TODO: test validations
    }

    /**
     * Get all current initiatives
     *
     * Get all current initiatives
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getInitiativesTest() throws ApiException {
        GetEventStreamInitiativesDefaultResponse response = api.getInitiatives();
        // TODO: test validations
    }

    /**
     * Get the list of opportunities
     *
     * Get the list of opportunities
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOpportunitiesTest() throws ApiException {
        GetOpportunitiesDefaultResponse response = api.getOpportunities();
        // TODO: test validations
    }

    /**
     * Gets abbreviated details of all campaigns that are currently plotted on the opportunity matrix
     *
     * Gets abbreviated details of all campaigns that are currently plotted on the opportunity matrix
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOpportunityMatrixTest() throws ApiException {
        GetOpportunityMatrixDefaultResponse response = api.getOpportunityMatrix();
        // TODO: test validations
    }

    /**
     * Update a Business Goal
     *
     * Update a Business Goal
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBusinessGoalTest() throws ApiException {
        CreateBusinessGoalRequest createBusinessGoalRequest = null;
        AUTHChangePasswordDefaultResponse response = api.updateBusinessGoal(createBusinessGoalRequest);
        // TODO: test validations
    }

    /**
     * Update a Business Initiative
     *
     * Update a Business Initiative
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateInitiativeTest() throws ApiException {
        CreateInitiativeRequest createInitiativeRequest = null;
        AUTHChangePasswordDefaultResponse response = api.updateInitiative(createInitiativeRequest);
        // TODO: test validations
    }

    /**
     * Update an Opportunity
     *
     * Update an Opportunity
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateOpportunityTest() throws ApiException {
        CreateOpportunityRequest createOpportunityRequest = null;
        AUTHChangePasswordDefaultResponse response = api.updateOpportunity(createOpportunityRequest);
        // TODO: test validations
    }

    /**
     * Store all the details for every campaign that&#39;s now plotted on the opportunity matrix.
     *
     * Store all the details for every campaign that&#39;s now plotted on the opportunity matrix.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateOpportunityMatrixTest() throws ApiException {
        UpdateOpportunityMatrixRequest updateOpportunityMatrixRequest = null;
        AUTHChangePasswordDefaultResponse response = api.updateOpportunityMatrix(updateOpportunityMatrixRequest);
        // TODO: test validations
    }

}

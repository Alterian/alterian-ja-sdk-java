/*
 * Journey Analytics API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alterian.ja;

import com.fasterxml.jackson.databind.util.StdDateFormat;
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.google.gson.JsonElement;
import io.gsonfire.GsonFireBuilder;
import io.gsonfire.TypeSelector;

import okio.ByteString;

import java.io.IOException;
import java.io.StringReader;
import java.lang.reflect.Type;
import java.text.DateFormat;
import java.text.ParseException;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.Locale;
import java.util.Map;
import java.util.HashMap;
import java.util.TimeZone;

/*
 * A JSON utility class
 *
 * NOTE: in the future, this class may be converted to static, which may break
 *       backward-compatibility
 */
public class JSON {
    private static Gson gson;
    private static boolean isLenientOnJson = false;
    private static DateTypeAdapter dateTypeAdapter = new DateTypeAdapter();
    private static SqlDateTypeAdapter sqlDateTypeAdapter = new SqlDateTypeAdapter();
    private static OffsetDateTimeTypeAdapter offsetDateTimeTypeAdapter = new OffsetDateTimeTypeAdapter();
    private static LocalDateTypeAdapter localDateTypeAdapter = new LocalDateTypeAdapter();
    private static ByteArrayAdapter byteArrayAdapter = new ByteArrayAdapter();

    private static final StdDateFormat sdf = new StdDateFormat()
        .withTimeZone(TimeZone.getTimeZone(ZoneId.systemDefault()))
        .withColonInTimeZone(true);
    private static final DateTimeFormatter dtf = DateTimeFormatter.ISO_OFFSET_DATE_TIME;

    @SuppressWarnings("unchecked")
    public static GsonBuilder createGson() {
        GsonFireBuilder fireBuilder = new GsonFireBuilder()
        ;
        GsonBuilder builder = fireBuilder.createGsonBuilder();
        return builder;
    }

    private static String getDiscriminatorValue(JsonElement readElement, String discriminatorField) {
        JsonElement element = readElement.getAsJsonObject().get(discriminatorField);
        if (null == element) {
            throw new IllegalArgumentException("missing discriminator field: <" + discriminatorField + ">");
        }
        return element.getAsString();
    }

    /**
     * Returns the Java class that implements the OpenAPI schema for the specified discriminator value.
     *
     * @param classByDiscriminatorValue The map of discriminator values to Java classes.
     * @param discriminatorValue The value of the OpenAPI discriminator in the input data.
     * @return The Java class that implements the OpenAPI schema
     */
    private static Class getClassByDiscriminator(Map classByDiscriminatorValue, String discriminatorValue) {
        Class clazz = (Class) classByDiscriminatorValue.get(discriminatorValue);
        if (null == clazz) {
            throw new IllegalArgumentException("cannot determine model class of name: <" + discriminatorValue + ">");
        }
        return clazz;
    }

    static {
        GsonBuilder gsonBuilder = createGson();
        gsonBuilder.registerTypeAdapter(Date.class, dateTypeAdapter);
        gsonBuilder.registerTypeAdapter(java.sql.Date.class, sqlDateTypeAdapter);
        gsonBuilder.registerTypeAdapter(OffsetDateTime.class, offsetDateTimeTypeAdapter);
        gsonBuilder.registerTypeAdapter(LocalDate.class, localDateTypeAdapter);
        gsonBuilder.registerTypeAdapter(byte[].class, byteArrayAdapter);
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.ALClient.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.ALClientSet.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.ALCulture.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.ALDataSource.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.ALDataSourceColumn.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.ALDataSourceDatabase.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.ALDataSourceTable.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.ALDataSourceType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.ALDatasourceJoin.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.ALDatasourceJoinColumn.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.ALDatasourceLink.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.ALDatasourceLinkJoin.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.ALDatasourcePrimaryKey.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.ALPermission.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.ALProcess.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.ALProcessApplication.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.ALUserGroup.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.APICursor.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.APIFilter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.APILastModifiedCursor.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.APIMetadata.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.AUTHChangePasswordDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.AUTHChangePasswordRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.AUTHCreateLoginDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.AUTHCreateLoginRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.AUTHDisableLoginRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.AUTHGetClientLoginsDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.AUTHGetClientLoginsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.AUTHGetLoginPasswordRulesDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.AUTHGetLoginPasswordRulesRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.AUTHGetLoginsForUserRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.AUTHGetLoginsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.AUTHRenameLoginRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.AUTHSetLoginUserIdRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.AUTHUpdateLoginRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.AddClientToClientSetRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.AddLoginImpersonationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.AddUserToBrandsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.AlchemyFieldType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.ApplicationDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.AreDatasourceCampaignsPausedDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.AreDatasourceCampaignsPausedRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.AreDatasourceJobsCompleteRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.BusinessGoal.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.BusinessGoalKPI.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.CMTokenInformation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.ClearPermissionsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.ColumnMatchList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.ColumnPublishedTransform.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.ColumnPublishedTransformSummary.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.CopyGroupRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.CopyUserRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.CreateBusinessGoalRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.CreateChannelRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.CreateClientDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.CreateClientRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.CreateClientSetRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.CreateDataSourceMappingRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.CreateDatasourceRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.CreateEMMappingRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.CreateEMSessionDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.CreateEMSessionRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.CreateEventStreamGroupRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.CreateEventStreamRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.CreateFolderRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.CreateGroupRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.CreateIdealisedJourneyRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.CreateImpersonationTokenRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.CreateInitiativeRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.CreateOpportunityRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.CreatePatternRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.CreatePatternTasksDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.CreatePatternTasksRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.CreatePersonaRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.CreateSankeyFavouriteRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.CreateStaticTokenRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.CreateUserRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.CreateVisualisationFavouriteRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.CreateWebSpoonDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.CreateWebSpoonRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DMClient.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DMClientSet.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DMClientSettings.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DMConditionalValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DMCreativeDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DMDeliveryContext.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DMField.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DMGroup.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DMInboundAddress.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DMInboundEventForward.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DMOmnitureSettings.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DMTimeZoneInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DMUser.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DMVMTA.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DMVariableValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DMWCMEntry.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DatasourceAttribute.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DatasourceUserMapping.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DecodeList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DeleteBusinessGoalRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DeleteChannelRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DeleteClientRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DeleteClientSetRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DeleteDatasourceRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DeleteEMMappingRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DeleteEventStreamCustomerColumnsFromGroupRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DeleteEventStreamCustomerColumnsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DeleteEventStreamGroupRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DeleteEventStreamRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DeleteFieldTransformListRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DeleteFolderRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DeleteGroupRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DeleteIdealisedJourneyRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DeleteInitiativeRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DeleteOpportunityRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DeletePatternRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DeletePersonaRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DeleteSankeyFavouritesRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DeleteStaticTokenRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DeleteTransformRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DeleteUserReassignAssetsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DeleteUserRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DeleteVisualisationFavouritesRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DeleteWebSpoonRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DisableClientRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DisableDatasourceRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DiscreteValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.DiscreteValueData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EMAbortDeploymentRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EMAuthenticateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EMClient.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EMDeleteListRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EMDocument.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EMDownloadMapping.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EMFolderDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EMFoldersDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EMGetClientGroupUsersDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EMGetClientGroupUsersRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EMGetClientGroupsDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EMGetClientGroupsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EMGetClientInfoDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EMGetClientInfoRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EMGetClientSetsDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EMGetClientSetsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EMGetCreativeDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EMGetCreativeFieldsDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EMGetCreativeRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EMGetCreativesDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EMGetCreativesRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EMGetEMServiceURLRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EMGetFoldersLazyDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EMGetFoldersLazyRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EMGetInboundAddressesDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EMGetInboundAddressesRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EMGetTemplateContentRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EMGetUsersRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EMLogOffRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EMPauseDeploymentRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EMPrimaryKeysDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EMPrimaryKeysRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EMSetEMServiceURLRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EMTestEMServiceURLRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EMUploadMapping.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EMVariable.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EnableDatasourceRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EventStream.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EventStreamColumnTransform.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EventStreamCustomerField.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EventStreamDecodeMappings.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EventStreamField.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EventStreamKey.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EventStreamModel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EventStreamPattern.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.EventStreamTransition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.ExportEventStreamInteractionRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.FieldTransformList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.FieldTransformationResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.FieldTransformationSampleSettings.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.FieldTransforms.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.Folder.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetAvailablePermissionsDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetBrandTokenRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetBrandsDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetBrandsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetBusinessGoalsDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetChannelsDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetClientSetsDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetClientSetsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetClientSettingsDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetClientSettingsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetClientsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetCulturesDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetCurrentClientDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetCurrentUserDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetCurrentUserRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetDataSourceAttributesDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetDataSourceAttributesRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetDataSourceEngineUserNameDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetDataSourceEngineUserNameRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetDataSourceItemsDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetDataSourceItemsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetDataSourceMappingsDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetDataSourceMappingsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetDataSourceTypesDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetDataSourceUsersDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetDataSourceUsersRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetDataSourcesDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetDataSourcesRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetDatasourceColumnDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetDatasourceColumnRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetDatasourceColumnsDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetDatasourceColumnsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetDatasourceDatabasesDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetDatasourceDatabasesRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetDatasourceDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetDatasourceFieldTypesDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetDatasourceRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetDatasourceTablesDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetDatasourceTablesRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetDecodeListDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetDecodeListRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetEMDownloadMappingsDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetEMMappingDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetEMMappingRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetEMMappingsDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetEMMappingsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetEventRecordsDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetEventRecordsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetEventStreamAggregatesRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetEventStreamChannelsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetEventStreamDecodeMappingsDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetEventStreamDecodeMappingsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetEventStreamDecodeTargetDiscretesDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetEventStreamDecodeTargetDiscretesRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetEventStreamDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetEventStreamDiscreteValuesDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetEventStreamDiscreteValuesRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetEventStreamInitiativesDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetEventStreamInitiativesRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetEventStreamModelsDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetEventStreamModelsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetEventStreamRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetEventStreamsDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetFieldTransformListDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetFieldTransformListRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetFieldTransformListsDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetFieldTransformationDiscreteValuesRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetFieldTransformationMappingsDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetFieldTransformationMappingsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetFolderDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetFolderRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetFoldersDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetFoldersRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetGroupDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetGroupMembersDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetGroupMembersRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetGroupRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetGroupsDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetGroupsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetGroupsWithPermissionDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetGroupsWithPermissionRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetIdealisedJourneysDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetLoginBrandDefaultDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetLoginBrandDefaultRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetLoginUserMappingDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetLoginUserMappingRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetOpportunitiesDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetOpportunityMatrixDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetPatternDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetPatternRecordsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetPatternRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetPatternTasksRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetPatternsDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetPatternsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetPermissionsDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetPermissionsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetPermittedUsersAndGroupsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetPersonaDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetPersonaRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetPersonasDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetPersonasRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetProcessApplicationsDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetProcessEntriesDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetProcessEntriesRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetProcessStatusDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetProcessStatusRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetRepeatingPatternItemScoresDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetRepeatingPatternItemScoresRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetRepeatingPatternItemsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetResourcesDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetSankeyFavouritesDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetSankeyFavouritesRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetTimeZonesDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetTokenDetailsDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetTokensDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetTokensRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetTransformsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetUserRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetUserSettingRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetUsersDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetUsersForClientRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetUsersRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetUsersWithPermissionRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetVisualisationFavouritesDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.GetWebSpoonLoginUrlRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.IDatasourceObject.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.IdealisedJourney.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.InboundAddresses.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.Initiative.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.ListWebSpoonDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.ListWebSpoonRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.LoginInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.LoginUserMapping.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.MarkDatasourceAsPendingDisableRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.ModelSnapshotOptions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.MoveEMMappingRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.MoveFolderRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.OperationResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.Opportunity.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.OpportunityItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.OpportunityMatrix.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.Pattern.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.PatternScoreList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.PatternTask.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.PauseDatasourceCampaignsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.Permission.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.PermissionResource.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.PermissionUserGroup.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.Persona.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.PersonaLink.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.PublishedTransformSummary.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.PublishedTransformVersion.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.QueryEventStreamCountDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.QueryEventStreamCountRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.QueryEventStreamDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.QueryEventStreamRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.QueryEventStreamResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.QueryEventStreamTransitionRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.RecordColumn.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.RecordData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.RefreshDatasourceRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.RemoveLoginBrandDefaultRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.RemoveLoginImpersonationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.RemoveLoginUserMappingRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.RenameEMMappingRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.RenameFolderRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.RequestCancelPatternTasksRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.ResumeDatasourceCampaignsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.Rule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.RunSequencePredictorDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.RunSequencePredictorRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.SankeyFavourite.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.SaveDecodeListRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.SaveFieldTransformListRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.SequencePredictorPredictionOptions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.SequencePredictorResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.SequencePredictorTrainingOptions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.SetLoginBrandDefaultRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.SetLoginUserMappingRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.SetPermissionsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.SetUserSettingRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.SettingValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.TakeOwnershipPermissionRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.Transform.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.UpdateChannelRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.UpdateClientSettingsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.UpdateDatasourceRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.UpdateEventStreamFieldTransformListsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.UpdateIdealisedJourneyRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.UpdateOpportunityMatrixRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.UpdatePatternRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.UpdateProcessEntryRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.UpdateRepeatingPatternItemScoresRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.UpdateSankeyFavouriteRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.UpdateStaticTokenRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.UpdateSystemSettingRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.UpdateVisualisationFavouriteRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.UpsertEventStreamCustomerColumnsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.UpsertEventStreamCustomerColumnsToGroupRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.VisualisationFavourite.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.alterian.ja.model.WebSpoonStatus.CustomTypeAdapterFactory());
        gson = gsonBuilder.create();
    }

    /**
     * Get Gson.
     *
     * @return Gson
     */
    public static Gson getGson() {
        return gson;
    }

    /**
     * Set Gson.
     *
     * @param gson Gson
     */
    public static void setGson(Gson gson) {
        JSON.gson = gson;
    }

    public static void setLenientOnJson(boolean lenientOnJson) {
        isLenientOnJson = lenientOnJson;
    }

    /**
     * Serialize the given Java object into JSON string.
     *
     * @param obj Object
     * @return String representation of the JSON
     */
    public static String serialize(Object obj) {
        return gson.toJson(obj);
    }

    /**
     * Deserialize the given JSON string to Java object.
     *
     * @param <T>        Type
     * @param body       The JSON string
     * @param returnType The type to deserialize into
     * @return The deserialized Java object
     */
    @SuppressWarnings("unchecked")
    public static <T> T deserialize(String body, Type returnType) {
        try {
            if (isLenientOnJson) {
                JsonReader jsonReader = new JsonReader(new StringReader(body));
                // see https://google-gson.googlecode.com/svn/trunk/gson/docs/javadocs/com/google/gson/stream/JsonReader.html#setLenient(boolean)
                jsonReader.setLenient(true);
                return gson.fromJson(jsonReader, returnType);
            } else {
                return gson.fromJson(body, returnType);
            }
        } catch (JsonParseException e) {
            // Fallback processing when failed to parse JSON form response body:
            // return the response body string directly for the String return type;
            if (returnType.equals(String.class)) {
                return (T) body;
            } else {
                throw (e);
            }
        }
    }

    /**
     * Gson TypeAdapter for Byte Array type
     */
    public static class ByteArrayAdapter extends TypeAdapter<byte[]> {

        @Override
        public void write(JsonWriter out, byte[] value) throws IOException {
            if (value == null) {
                out.nullValue();
            } else {
                out.value(ByteString.of(value).base64());
            }
        }

        @Override
        public byte[] read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String bytesAsBase64 = in.nextString();
                    ByteString byteString = ByteString.decodeBase64(bytesAsBase64);
                    return byteString.toByteArray();
            }
        }
    }

    /**
     * Gson TypeAdapter for JSR310 OffsetDateTime type
     */
    public static class OffsetDateTimeTypeAdapter extends TypeAdapter<OffsetDateTime> {

        private DateTimeFormatter formatter;

        public OffsetDateTimeTypeAdapter() {
            this(DateTimeFormatter.ISO_OFFSET_DATE_TIME);
        }

        public OffsetDateTimeTypeAdapter(DateTimeFormatter formatter) {
            this.formatter = formatter;
        }

        public void setFormat(DateTimeFormatter dateFormat) {
            this.formatter = dateFormat;
        }

        @Override
        public void write(JsonWriter out, OffsetDateTime date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                out.value(formatter.format(date));
            }
        }

        @Override
        public OffsetDateTime read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    if (date.endsWith("+0000")) {
                        date = date.substring(0, date.length()-5) + "Z";
                    }
                    return OffsetDateTime.parse(date, formatter);
            }
        }
    }

    /**
     * Gson TypeAdapter for JSR310 LocalDate type
     */
    public static class LocalDateTypeAdapter extends TypeAdapter<LocalDate> {

        private DateTimeFormatter formatter;

        public LocalDateTypeAdapter() {
            this(DateTimeFormatter.ISO_LOCAL_DATE);
        }

        public LocalDateTypeAdapter(DateTimeFormatter formatter) {
            this.formatter = formatter;
        }

        public void setFormat(DateTimeFormatter dateFormat) {
            this.formatter = dateFormat;
        }

        @Override
        public void write(JsonWriter out, LocalDate date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                out.value(formatter.format(date));
            }
        }

        @Override
        public LocalDate read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    return LocalDate.parse(date, formatter);
            }
        }
    }

    public static void setOffsetDateTimeFormat(DateTimeFormatter dateFormat) {
        offsetDateTimeTypeAdapter.setFormat(dateFormat);
    }

    public static void setLocalDateFormat(DateTimeFormatter dateFormat) {
        localDateTypeAdapter.setFormat(dateFormat);
    }

    /**
     * Gson TypeAdapter for java.sql.Date type
     * If the dateFormat is null, a simple "yyyy-MM-dd" format will be used
     * (more efficient than SimpleDateFormat).
     */
    public static class SqlDateTypeAdapter extends TypeAdapter<java.sql.Date> {

        private DateFormat dateFormat;

        public SqlDateTypeAdapter() {}

        public SqlDateTypeAdapter(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        public void setFormat(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        @Override
        public void write(JsonWriter out, java.sql.Date date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                String value;
                if (dateFormat != null) {
                    value = dateFormat.format(date);
                } else {
                    value = date.toString();
                }
                out.value(value);
            }
        }

        @Override
        public java.sql.Date read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    try {
                        if (dateFormat != null) {
                            return new java.sql.Date(dateFormat.parse(date).getTime());
                        }
                        return new java.sql.Date(sdf.parse(date).getTime());
                    } catch (ParseException e) {
                        throw new JsonParseException(e);
                    }
            }
        }
    }

    /**
     * Gson TypeAdapter for java.util.Date type
     * If the dateFormat is null, DateTimeFormatter will be used.
     */
    public static class DateTypeAdapter extends TypeAdapter<Date> {

        private DateFormat dateFormat;

        public DateTypeAdapter() {}

        public DateTypeAdapter(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        public void setFormat(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        @Override
        public void write(JsonWriter out, Date date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                String value;
                if (dateFormat != null) {
                    value = dateFormat.format(date);
                } else {
                    value = date.toInstant().atOffset(ZoneOffset.UTC).format(dtf);
                }
                out.value(value);
            }
        }

        @Override
        public Date read(JsonReader in) throws IOException {
            try {
                switch (in.peek()) {
                    case NULL:
                        in.nextNull();
                        return null;
                    default:
                        String date = in.nextString();
                        try {
                            if (dateFormat != null) {
                                return dateFormat.parse(date);
                            }
                            return sdf.parse(date);
                        } catch (ParseException e) {
                            throw new JsonParseException(e);
                        }
                }
            } catch (IllegalArgumentException e) {
                throw new JsonParseException(e);
            }
        }
    }

    public static void setDateFormat(DateFormat dateFormat) {
        dateTypeAdapter.setFormat(dateFormat);
    }

    public static void setSqlDateFormat(DateFormat dateFormat) {
        sqlDateTypeAdapter.setFormat(dateFormat);
    }
}

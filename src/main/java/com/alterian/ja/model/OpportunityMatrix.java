/*
 * Journey Analytics API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alterian.ja.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.alterian.ja.JSON;

/**
 * A Data transfer object (DTO) to move information about campaigns within the opportunity matrix to and from the UI             We will have one of these instances for each cell in the matrix that contains a campaign             At time of writing, we will always get and update the entire list of Opportunity Matrix elements in one go
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.4.0")
public class OpportunityMatrix {
  public static final String SERIALIZED_NAME_BUSINESS_GOAL_I_D = "BusinessGoalID";
  @SerializedName(SERIALIZED_NAME_BUSINESS_GOAL_I_D)
  private Integer businessGoalID;

  public static final String SERIALIZED_NAME_OPPORTUNITY_I_D = "OpportunityID";
  @SerializedName(SERIALIZED_NAME_OPPORTUNITY_I_D)
  private Integer opportunityID;

  public static final String SERIALIZED_NAME_DOCUMENT_I_D = "DocumentID";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_I_D)
  private Integer documentID;

  public static final String SERIALIZED_NAME_CAMPAIGN_NAME = "CampaignName";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN_NAME)
  private String campaignName;

  public static final String SERIALIZED_NAME_CAMPAIGN_DESCRIPTION = "CampaignDescription";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN_DESCRIPTION)
  private String campaignDescription;

  public static final String SERIALIZED_NAME_AUTHOR = "Author";
  @SerializedName(SERIALIZED_NAME_AUTHOR)
  private String author;

  public static final String SERIALIZED_NAME_LAST_UPDATED = "LastUpdated";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED)
  private OffsetDateTime lastUpdated;

  public static final String SERIALIZED_NAME_SUB_TYPE = "SubType";
  @SerializedName(SERIALIZED_NAME_SUB_TYPE)
  private String subType;

  public OpportunityMatrix() {
  }

  public OpportunityMatrix businessGoalID(Integer businessGoalID) {
    this.businessGoalID = businessGoalID;
    return this;
  }

   /**
   * The Id of the story that this campaign is appearing in. Basically the Y coordinate of the matrix             If the Story has been deleted then the UI will not display this campaign
   * @return businessGoalID
  **/
  @javax.annotation.Nullable
  public Integer getBusinessGoalID() {
    return businessGoalID;
  }

  public void setBusinessGoalID(Integer businessGoalID) {
    this.businessGoalID = businessGoalID;
  }


  public OpportunityMatrix opportunityID(Integer opportunityID) {
    this.opportunityID = opportunityID;
    return this;
  }

   /**
   * The Id of the opportunity that this campaign is appearing in. Basically the X coordinate of the matrix             If the Opportunity has been deleted then the UI will not display this campaign
   * @return opportunityID
  **/
  @javax.annotation.Nullable
  public Integer getOpportunityID() {
    return opportunityID;
  }

  public void setOpportunityID(Integer opportunityID) {
    this.opportunityID = opportunityID;
  }


  public OpportunityMatrix documentID(Integer documentID) {
    this.documentID = documentID;
    return this;
  }

   /**
   * The id of the campaign document that is referenced in the cell. Required when updating
   * @return documentID
  **/
  @javax.annotation.Nullable
  public Integer getDocumentID() {
    return documentID;
  }

  public void setDocumentID(Integer documentID) {
    this.documentID = documentID;
  }


  public OpportunityMatrix campaignName(String campaignName) {
    this.campaignName = campaignName;
    return this;
  }

   /**
   * The name of the campaign in this cell. Read only, provided as a convenience for populating the Opportunity matrix UI
   * @return campaignName
  **/
  @javax.annotation.Nullable
  public String getCampaignName() {
    return campaignName;
  }

  public void setCampaignName(String campaignName) {
    this.campaignName = campaignName;
  }


  public OpportunityMatrix campaignDescription(String campaignDescription) {
    this.campaignDescription = campaignDescription;
    return this;
  }

   /**
   * The description of the campaign in this cell. Read only, provided as a convenience for populating the Opportunity matrix UI
   * @return campaignDescription
  **/
  @javax.annotation.Nullable
  public String getCampaignDescription() {
    return campaignDescription;
  }

  public void setCampaignDescription(String campaignDescription) {
    this.campaignDescription = campaignDescription;
  }


  public OpportunityMatrix author(String author) {
    this.author = author;
    return this;
  }

   /**
   * The Author of the campaign in this cell. Read only, provided as a convenience for populating the Opportunity matrix UI
   * @return author
  **/
  @javax.annotation.Nullable
  public String getAuthor() {
    return author;
  }

  public void setAuthor(String author) {
    this.author = author;
  }


  public OpportunityMatrix lastUpdated(OffsetDateTime lastUpdated) {
    this.lastUpdated = lastUpdated;
    return this;
  }

   /**
   * The Date/Time the campaign was last updated. Read only, provided as a convenience for populating the Opportunity matrix UI
   * @return lastUpdated
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdated() {
    return lastUpdated;
  }

  public void setLastUpdated(OffsetDateTime lastUpdated) {
    this.lastUpdated = lastUpdated;
  }


  public OpportunityMatrix subType(String subType) {
    this.subType = subType;
    return this;
  }

   /**
   * What kind of thing is this? Used to distinguish between Silverlight campaigns (&#x3D;\&quot;Campaign\&quot;) and Campaign360 (&#x3D;\&quot;Campaign.BuildACampaign\&quot;) objects when deeplinking
   * @return subType
  **/
  @javax.annotation.Nullable
  public String getSubType() {
    return subType;
  }

  public void setSubType(String subType) {
    this.subType = subType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OpportunityMatrix opportunityMatrix = (OpportunityMatrix) o;
    return Objects.equals(this.businessGoalID, opportunityMatrix.businessGoalID) &&
        Objects.equals(this.opportunityID, opportunityMatrix.opportunityID) &&
        Objects.equals(this.documentID, opportunityMatrix.documentID) &&
        Objects.equals(this.campaignName, opportunityMatrix.campaignName) &&
        Objects.equals(this.campaignDescription, opportunityMatrix.campaignDescription) &&
        Objects.equals(this.author, opportunityMatrix.author) &&
        Objects.equals(this.lastUpdated, opportunityMatrix.lastUpdated) &&
        Objects.equals(this.subType, opportunityMatrix.subType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(businessGoalID, opportunityID, documentID, campaignName, campaignDescription, author, lastUpdated, subType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OpportunityMatrix {\n");
    sb.append("    businessGoalID: ").append(toIndentedString(businessGoalID)).append("\n");
    sb.append("    opportunityID: ").append(toIndentedString(opportunityID)).append("\n");
    sb.append("    documentID: ").append(toIndentedString(documentID)).append("\n");
    sb.append("    campaignName: ").append(toIndentedString(campaignName)).append("\n");
    sb.append("    campaignDescription: ").append(toIndentedString(campaignDescription)).append("\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("    subType: ").append(toIndentedString(subType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("BusinessGoalID");
    openapiFields.add("OpportunityID");
    openapiFields.add("DocumentID");
    openapiFields.add("CampaignName");
    openapiFields.add("CampaignDescription");
    openapiFields.add("Author");
    openapiFields.add("LastUpdated");
    openapiFields.add("SubType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to OpportunityMatrix
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OpportunityMatrix.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OpportunityMatrix is not found in the empty JSON string", OpportunityMatrix.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OpportunityMatrix.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OpportunityMatrix` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("CampaignName") != null && !jsonObj.get("CampaignName").isJsonNull()) && !jsonObj.get("CampaignName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CampaignName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CampaignName").toString()));
      }
      if ((jsonObj.get("CampaignDescription") != null && !jsonObj.get("CampaignDescription").isJsonNull()) && !jsonObj.get("CampaignDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CampaignDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CampaignDescription").toString()));
      }
      if ((jsonObj.get("Author") != null && !jsonObj.get("Author").isJsonNull()) && !jsonObj.get("Author").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Author` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Author").toString()));
      }
      if ((jsonObj.get("SubType") != null && !jsonObj.get("SubType").isJsonNull()) && !jsonObj.get("SubType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SubType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SubType").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OpportunityMatrix.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OpportunityMatrix' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OpportunityMatrix> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OpportunityMatrix.class));

       return (TypeAdapter<T>) new TypeAdapter<OpportunityMatrix>() {
           @Override
           public void write(JsonWriter out, OpportunityMatrix value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OpportunityMatrix read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OpportunityMatrix given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OpportunityMatrix
  * @throws IOException if the JSON string is invalid with respect to OpportunityMatrix
  */
  public static OpportunityMatrix fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OpportunityMatrix.class);
  }

 /**
  * Convert an instance of OpportunityMatrix to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

